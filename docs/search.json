[{"path":"https://ummel.github.io/fusionACS/articles/faq.html","id":"can-other-donor-surveys-be-fused","dir":"Articles","previous_headings":"","what":"Can other donor surveys be fused?","title":"Frequently Asked Questions","text":"Yes. principle, U.S. household- person-level national survey circa 2005 later candidate fusion.","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"fusion-methodology","dir":"Articles","previous_headings":"","what":"Fusion methodology","title":"Methods and formulae","text":"complete description fusionACS methodology provided Ummel et al. (2024). given donor survey, data processing analysis “pipeline” consists following steps: Ingest raw survey data produce standardized microdata documentation. Harmonize variables donor survey conceptually-similar variables ACS. Prepare clean, structured, consistent donor ACS microdata. Train machine learning models donor microdata. Fuse donor’s unique variables ACS microdata. Validate fused microdata. Analyze fused microdata calculate estimates margins error. Steps 1–3 part fusionData package, Steps 4–6 carried using fusionModel package. steps carried fusionACS team internally, generally reason practitioner use associated packages. key functionality Step 7 provided fusionACS package documented site. figure Ummel et al. (2024) shows various input data sources fit together.  spatial data consists wide range place-specific predictor variables can merged donor ACS microdata basis respondent location. used augment harmonized, respondent-level predictors available machine learning models.","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"urbanpop-integration","dir":"Articles","previous_headings":"","what":"UrbanPop integration","title":"Methods and formulae","text":"Recent work integrating ORNL UrbanPop represents significant advancement ability fusionACS generate high-resolution estimates across space. UrbanPop synthetic population data product produced Oak Ridge National Laboratory (Tuccillo et al. 2023). provides probabilistic estimates location (block group) ACS respondent household. Specifically, block group, ACS PUMS respondent households re-weighted replicate published ACS Summary File tables key demographic, economic, employment, mobility, housing variables. Merging fusionACS microdata UrbanPop (linking PUMS respondent ID) results simulated block group populations can observe ACS donor survey variables. allows fusionACS + UrbanPop generate estimates geographic areas smaller Public Use Microdata Areas (PUMA’s) disclosed ACS PUMS. Since UrbanPop assigns ACS household multiple block groups (8, average) merged microdata can become quite large. public pseudo-sample includes partial, structured sample UrbanPop weights. helps keep public data release fully functional also manageable size. Analyses computed complete database inside Yale High Performance Computing (HPC) facility utilize complete UrbanPop dataset derive production-level estimates.","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"point-estimates-and-uncertainty","dir":"Articles","previous_headings":"","what":"Point estimates and uncertainty","title":"Methods and formulae","text":"fusionACS analysis consists request estimate particular variable across one sub-populations. Estimates can means, medians, sums, proportions, counts. example, “Mean household electricity consumption Chicago, census tract”; “Proportion low-income households Atlanta without air conditioning”. addition point estimate, fusionACS also returns associated uncertainty margin error. Uncertainty underlying machine learning models captured production M unique implicates (typically 20). implicate unique equally-plausible simulation fused variables given uncertainty underlying fusion process. public pseudo-sample includes single implicate (M=1). assessing variance within across implicates, possible calculate margin error associated given point estimate.","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"pooled-variance","dir":"Articles","previous_headings":"Point estimates and uncertainty","what":"Pooled variance","title":"Methods and formulae","text":"given fusionACS analysis, point estimates associated margin error calculated using technique Rubin (1987). point estimate, θ‾\\bar{\\theta}, mean individual estimates calculated MM implicates: θ‾=1M∑=1Mθ̂\\bar{\\theta} = \\frac{1}{M} \\sum_{=1}^{M} \\hat{\\theta}_i  variance θ‾\\bar{\\theta} calculated “pooling” variance within samples: Varcombined=1M∑=1MVar(θ̂)+(1+1M)Varbetween \\text{Var}_{\\text{combined}} = \\frac{1}{M} \\sum_{=1}^{M} \\text{Var}( \\hat{\\theta}_i ) + \\left( 1 + \\frac{1}{M} \\right) \\text{Var}_{\\text{}} Varbetween\\text{Var}_{\\text{}} “-sample” variance individual estimates: Varbetween=1M−1∑=1M(θ̂−θ‾)2 \\text{Var}_{\\text{}} = \\frac{1}{M - 1} \\sum_{=1}^{M} \\left( \\hat{\\theta}_i - \\bar{\\theta} \\right)^2 Var(θ̂)\\text{Var}( \\hat{\\theta}_i ) refers “within-sample” variances MM individual estimates; .e. square standard error [SE(θ̂)2\\text{SE}( \\hat{\\theta} )^2].","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"within-sample-standard-errors","dir":"Articles","previous_headings":"Point estimates and uncertainty","what":"Within-sample standard errors","title":"Methods and formulae","text":"calculation within-sample standard errors depends type estimate requested. calculate standard error mean estimate sample nn observations frequency weights wiw_i: SE(θ̂mean)=∑wi(xi−x‾w)2∑wi−1⋅1neff SE(\\hat{\\theta}_{\\text{mean}}) = \\sqrt{ \\frac{ \\sum w_i (x_i - \\bar{x}_w)^2 }{ \\sum w_i - 1 } \\cdot \\frac{1}{n_{\\text{eff}}} }  x‾w\\bar{x}_w weighted mean neffn_{\\text{eff}} effective sample size calculated observation weights: neff=(∑wi)2∑wi2 n_{\\text{eff}} = \\frac{ \\left( \\sum w_i \\right)^2 }{ \\sum w_i^2 }  observations weights either come directly ACS PUMS ORNL UrbanPop, depending level geographic detail required analysis. default, assemble() automatically chooses appropriate weights. public pseudo-sample includes partial, structured sample UrbanPop weights. use “effective sample size” (neff)(n_{\\text{eff}}) – rather sample size nn – helps capture additional uncertainty sample weights (Kish 1965; Lumley 2010). general, smaller target population greater “unevenness” observed sample weights, leading neff<nn_{\\text{eff}}<n, corresponding increase standard error. approach differs “Successive Differences Replication” (SDR) method typically used calculate margin error working ACS PUMS (U.S. Census Bureau 2020). However, initial testing find SDR effective sample size approaches yield similar uncertainty estimates (correlation≈0.9)(correlation \\approx 0.9), latter exhibiting slight upward bias. Since SDR requires significantly computation, time opted use effective sample size technique instead. implementation R uses collapse package qsu() function (Krantz 2025), computes mean, standard deviation, sum weights single pass data C/C++. provides extremely fast calculation, even data grouped across MM implicates (optionally) user-specified sub-populations. median estimates, calculation standard error via bootstrapping prohibitively expensive (Hahn Meeker 1991). Given need computational efficiency fusionACS context, standard error median instead estimated using large-sample approximation: SE(θ̂median)≈12f(m)⋅1neff SE(\\hat{\\theta}_{\\text{median}}) \\approx \\frac{1}{2f(m)} \\cdot \\frac{1}{\\sqrt{n_{\\text{eff}}}}  f(m)f(m) density median. formula arises asymptotic variance sample quantiles regularity conditions (Serfling 1980). speed, f(m)f(m) approximated using finite difference quantile function (Koenker 2005): f(m)≈p2−p1Q(p2)−Q(p1) f(m) \\approx \\frac{p_2 - p_1}{Q(p_2) - Q(p_1)} Q(p)Q(p) weighted quantile function, p1p_1 p2p_2 probabilities close median (0.475 0.525, default). Implementation via collapse package leverages single, radix-based ordering input efficiently compute median, Q(p1)Q(p_1), Q(p2)Q(p_2). allows standard error estimated little additional cost beyond computation median . f(m)f(m) undefined, code falls back conservative approximation Tukey (1977): SE(θ̂median)≈SE(θ̂mean)⋅π2 SE(\\hat{\\theta}_{\\text{median}}) \\approx SE(\\hat{\\theta}_{\\text{mean}})  \\cdot \\frac{\\pi}{2}  calculate standard error proportion, given previously-defined effective sample size: SE(θ̂proportion)=p̂*(1−p̂*)neff SE(\\hat{\\theta}_{\\text{proportion}}) = \\sqrt{ \\frac{ \\hat{p}^*(1 - \\hat{p}^*) }{ n_{\\text{eff}} } } p̂*\\hat{p}^* Agresti-Coull (Agresti Coull 1998) adjusted proportion derived weighted sample proportion (p̂\\hat{p}), assuming 90% confidence interval (z=1.645z=1.645): p̂*=p̂⋅neff+z22neff+z2 \\hat{p}^* = \\frac{ \\hat{p} \\cdot n_{\\text{eff}} + \\frac{z^2}{2} }{ n_{\\text{eff}} + z^2 } adjustment ensures non-zero standard error p̂(1−p̂)\\hat{p}(1 - \\hat{p}) zero; e.g. unobserved outcomes smaller samples. un-adjusted sample proportion (p̂\\hat{p}) always returned point estimate. sums (numerical case) counts (categorical case), standard error multiple standard error mean proportion, respectively: SE(θ̂sum)=SE(θ̂mean)⋅∑wi SE(\\hat{\\theta}_{\\text{sum}}) = SE(\\hat{\\theta}_{\\text{mean}}) \\cdot \\sum w_i SE(θ̂count)=SE(θ̂proportion)⋅∑wi SE(\\hat{\\theta}_{\\text{count}}) = SE(\\hat{\\theta}_{\\text{proportion}}) \\cdot \\sum w_i","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"margin-of-error","dir":"Articles","previous_headings":"Point estimates and uncertainty","what":"Margin of error","title":"Methods and formulae","text":"calculated Varcombined\\text{Var}_{\\text{combined}} component variances, degrees freedom calculated using formula Barnard Rubin (1999). Compared original Rubin (1987) degrees freedom, formulation allows unequal within-sample variances accurate small samples. ν=(M−1)(1+1M∑=1MVar(θ̂)Varbetween)2/(1M−1+1M2⋅∑=1MVar(θ̂)2Varbetween2) \\nu = (M - 1) \\left( 1 + \\frac{ \\frac{1}{M} \\sum_{=1}^{M} \\text{Var}(\\hat{\\theta}_i) }{ \\text{Var}_{\\text{}} } \\right)^2 \\bigg/ \\left( \\frac{1}{M - 1} + \\frac{1}{M^2} \\cdot \\frac{ \\sum_{=1}^{M} \\text{Var}(\\hat{\\theta}_i)^2 }{ \\text{Var}_{\\text{}}^2 } \\right) keeping convention used U.S. Census Bureau published ACS estimates, fusionACS returns 90% margin error: ME90%=t0.95,ν⋅Varcombined \\text{}_{90\\%} = t_{0.95, \\, \\nu} \\cdot \\sqrt{\\text{Var}_{\\text{combined}}}","code":""},{"path":"https://ummel.github.io/fusionACS/articles/methods.html","id":"interpretation-of-uncertainty","dir":"Articles","previous_headings":"Point estimates and uncertainty","what":"Interpretation of uncertainty","title":"Methods and formulae","text":"universal standard judging margin error /coefficient variation “high”. answer always depends nature analysis intended application. minimum, generalized guidelines used determine valid conclusions can drawn specific estimates; example, see Parmenter Lau (2013), page 2. important analyses reports based fusionACS data products communicate authors’ chosen standards determining estimate sufficiently reliable draw conclusions.","code":""},{"path":[]},{"path":"https://ummel.github.io/fusionACS/articles/publications.html","id":"citing-fusionacs","dir":"Articles","previous_headings":"","what":"Citing fusionACS","title":"Publications","text":"use fusionACS outputs cite Ummel et al. (2024) Tuccillo et al. (2023) : Ummel, Kevin, Miguel Poblete-Cazenave, Karthik Akkiraju, Nick Graetz, Hero Ashman, Cora Kingdon, Steven Herrera Tenorio, Aaryaman Sunny Singhal, Daniel Aldana Cohen, Narasimha D. Rao. 2024. “Multidimensional Well-US Households Fine Spatial Scale Using Fused Household Surveys.” Scientific Data 11 (142). https://doi.org/10.1038/s41597-023-02788-7. Tuccillo, Joseph V., Robert Stewart, Amy Rose, Nathan Trombley, Jessica Moehl, Nicholas Nagle, Budhendra Bhaduri. 2023. “UrbanPop: Spatial Microsimulation Framework Exploring Demographic Influences Human Dynamics.” Applied Geography 151: 102844. https://doi.org/10.1016/j.apgeog.2022.102844.","code":""},{"path":"https://ummel.github.io/fusionACS/articles/publications.html","id":"publications-using-fusionacs","dir":"Articles","previous_headings":"","what":"Publications using fusionACS","title":"Publications","text":"Brown, M., Becker, J. M., Carbone, J. C., Goforth, T., McFarland, J., Nock, D., Pitman, K., & Steinberg, D. 2024. Tax credits clean electricity: distributional impacts supply-push policies power sector. Journal Association Environmental Resource Economists, 11(S1), S199–S229. https://doi.org/10.1086/730923","code":""},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"package-install-and-setup","dir":"Articles","previous_headings":"","what":"Package install and setup","title":"Using the fusionACS package","text":"Install latest package version Github. Dependencies include arrow package allow fast, platform- language-independent data access. install may take minutes. Load package. Download latest fusionACS microdata psudeo-sample. data automatically downloaded system-specific (project-independent) location identified ‘rappdirs’ package. path data files accessible via get_directory(), particular reason access directly. can view data dictionary see surveys, year, variables available.","code":"devtools::install_github(\"ummel/fusionACS\") library(fusionACS) get_microdata() dict = dictionary() ## ℹ There are 372 variables available across 8 surveys: ##  ACS, AHS, CEI, CPS, FAPS, GALLUP, NHTS, RECS  ## As well as 17 geographic variables. See ?dictionary for details."},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"assemble-microdata","dir":"Articles","previous_headings":"","what":"Assemble microdata","title":"Using the fusionACS package","text":"Use assemble() function obtain desired subset pseudo-sample.","code":""},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"example-1","dir":"Articles","previous_headings":"Assemble microdata","what":"Example 1","title":"Using the fusionACS package","text":"Assemble household income (hincp), housing tenure (ten), state residence ACS, plus natural gas consumption (btung), square footage (totsqft_en), main space heating equipment type (equipm) 2020 RECS, plus pseudo-assignment county tract (2010 geographic definitions). Return nationwide household microdata. requested county tract (require UrbanPop weights), assemble() automatically returned microdata observations 2015-2019; whole period required use UrbanPop weights. Also note variables btung, equipm, totsqft_en present 2015 2020 RECS fusion output. assemble() automatically selected 2020 vintage (want), also possible manually specify desired donor survey variable.","code":"my.data = assemble(   variables = c(hincp, ten, btung, totsqft_en, equipm, state_name, county10, tract10),    respondent = \"household\" ) ## → Returning UrbanPop household-level weights ## → Auto-set 'year' argument to 2015:2019 (required for UrbanPop weights) ## ! The following 'variables' are ambiguous and have been automatically resolved as follows: ##    variable survey vintage include ##       btung   RECS    2020    TRUE ##       btung   RECS    2015   FALSE ##      equipm   RECS    2020    TRUE ##      equipm   RECS    2015   FALSE ##  totsqft_en   RECS    2020    TRUE ##  totsqft_en   RECS    2015   FALSE ## ! If this is not the intended result, use backticked selector(s) in 'variables'. For example: ## `RECS_2015:btung`, `RECS_2015:equipm`, `RECS_2015:totsqft_en` head(my.data) ## Key: <M, year, hid> ##        M  year      hid weight  hincp ##    <int> <int>    <int>  <num>  <int> ## 1:     1  2015 10000001     45 201004 ## 2:     1  2015 10000002    145  48762 ## 3:     1  2015 10000004     35  70088 ## 4:     1  2015 10000005     40 148187 ## 5:     1  2015 10000007     25  80101 ## 6:     1  2015 10000008    150  52066 ##                                                        ten  btung totsqft_en ##                                                     <fctr>  <int>      <int> ## 1: Owned with mortgage or loan (include home equity loans) 123600       4560 ## 2:                                                  Rented      0       1440 ## 3: Owned with mortgage or loan (include home equity loans) 106900       1880 ## 4:                                                  Rented      0       1600 ## 5:                                    Owned free and clear  69800       1200 ## 6:                                                  Rented   6370        500 ##                                            equipm state_name county10 ##                                            <fctr>     <fctr>   <fctr> ## 1:                                Central furnace   Illinois    17197 ## 2:                                Central furnace      Texas    48085 ## 3:                                Central furnace   Kentucky    21157 ## 4: Ductless heat pump, also known as a mini-split      Texas    48491 ## 5:                                Central furnace   Colorado    08069 ## 6:                                Central furnace California    06059 ##        tract10 ##         <fctr> ## 1: 17197880314 ## 2: 48085031001 ## 3: 21157950300 ## 4: 48491021508 ## 5: 08069002010 ## 6: 06059001402"},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"example-2","dir":"Articles","previous_headings":"Assemble microdata","what":"Example 2","title":"Using the fusionACS package","text":"includes optional expressions : 1) Restrict households state Texas used natural gas; 2) Create new variable (btung_per_ft2) measures consumption per square foot; 3) Remove btung totsqft_en creating new variable, convenience.","code":"my.data = assemble(   variables = c(hincp, ten, btung, totsqft_en, equipm, state_name, county10, tract10),    respondent = \"household\",    btung > 0,    state_name == \"Texas\",    btung_per_ft2 = btung / totsqft_en,    -c(btung, totsqft_en) ) ## → Returning UrbanPop household-level weights ## → Auto-set 'year' argument to 2015:2019 (required for UrbanPop weights) ## ! The following 'variables' are ambiguous and have been automatically resolved as follows: ##    variable survey vintage include ##       btung   RECS    2020    TRUE ##       btung   RECS    2015   FALSE ##      equipm   RECS    2020    TRUE ##      equipm   RECS    2015   FALSE ##  totsqft_en   RECS    2020    TRUE ##  totsqft_en   RECS    2015   FALSE ## ! If this is not the intended result, use backticked selector(s) in 'variables'. For example: ## `RECS_2015:btung`, `RECS_2015:equipm`, `RECS_2015:totsqft_en` head(my.data) ## Key: <M, year, hid> ##        M  year      hid weight  hincp ##    <int> <int>    <int>  <num>  <int> ## 1:     1  2015 10000016     25  63080 ## 2:     1  2015 10000083     55 125358 ## 3:     1  2015 10000154     85 114144 ## 4:     1  2015 10000159     60  45658 ## 5:     1  2015 10000168    105 664839 ## 6:     1  2015 10000216     60  68086 ##                                                        ten ##                                                     <fctr> ## 1:                                    Owned free and clear ## 2: Owned with mortgage or loan (include home equity loans) ## 3:                                    Owned free and clear ## 4:                                    Owned free and clear ## 5: Owned with mortgage or loan (include home equity loans) ## 6:                                    Owned free and clear ##                       equipm state_name county10     tract10 btung_per_ft2 ##                       <fctr>     <fctr>   <fctr>      <fctr>         <num> ## 1: Portable electric heaters      Texas    48103 48103950100      1.441667 ## 2:           Central furnace      Texas    48113 48113012500      7.522659 ## 3:           Central furnace      Texas    48201 48201541900     10.200573 ## 4:         Central heat pump      Texas    48449 48449950200     19.384615 ## 5:           Central furnace      Texas    48113 48113013500     33.015267 ## 6:           Central furnace      Texas    48181 48181000800     15.106383"},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"analyze-microdata","dir":"Articles","previous_headings":"","what":"Analyze microdata","title":"Using the fusionACS package","text":"Use analyze() function calculate means, medians, sums, proportions, counts specific variables, optionally across population subgroups. analysis process uses microdata sample generated via assemble().","code":""},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"example-1-1","dir":"Articles","previous_headings":"Analyze microdata","what":"Example 1","title":"Using the fusionACS package","text":"Calculate mean natural gas consumption per square foot. Since argument specified, analysis applies observations .data; .e. households Texas 2015-2019 used natural gas. result single row, sub-populations requested example. results include point estimate (est) margin error (moe), approximations pseudo-sample lacks multiple fusion implicates complete UrbanPop data needed production-level results.","code":"test <- analyze(   data = my.data,   ~ mean(btung_per_ft2) ) ## Computing estimates for numerical analyses: ##  ~ mean(btung_per_ft2)  ## Computing final point estimates and margin of error test ## # A tibble: 1 × 7 ##   lhs                rhs                 type  level N_eff   est    moe ##   <chr>              <chr>               <chr> <lgl> <int> <dbl>  <dbl> ## 1 mean_btung_per_ft2 mean(btung_per_ft2) mean  NA    76223  20.3 0.0882"},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"example-2-1","dir":"Articles","previous_headings":"Analyze microdata","what":"Example 2","title":"Using the fusionACS package","text":"also request median natural gas consumption per square foot proportion households using type heating equipment (equipm). calculate separate estimates homeowners renters. ACS ten (housing tenure) variable contains following levels: Let’s add custom housing tenure variable .data collapses ten just two categories: “Renters” “Homeowners”. many ways code , ’s clear syntax: Alternatively, create rent_own within original assemble() call, analogous created btung_per_ft2. take code , put function, pass function custom fun argument analyze. valid ways manipulate microdata prior analysis. Now calculate desired estimates: results suggest typical (median) renter Texas consumes natural gas per square foot living space homeowners.","code":"unique(my.data$ten) ## [1] Owned free and clear                                    ## [2] Owned with mortgage or loan (include home equity loans) ## [3] Rented                                                  ## [4] Occupied without payment of rent                        ## 4 Levels: Owned with mortgage or loan (include home equity loans) ... my.data <- dplyr::mutate(   .data = my.data,   rent_own = dplyr::case_when(     ten %in% c('Occupied without payment of rent', 'Rented') ~ 'Renters',     ten %in% c('Owned free and clear', 'Owned with mortgage or loan (include home equity loans)') ~ 'Homeowners'   ) ) test <- analyze(   data = my.data,   ~ mean(btung_per_ft2),   ~ median(btung_per_ft2),   ~ mean(equipm),   by = rent_own ) ## Computing estimates for categorical analyses: ##  ~ mean(equipm)  ##  -- Completed initial pivot-summation ##  -- Completed intermediate summation ##  -- Completed final summation ##  -- Completed final melt ## Computing estimates for numerical analyses: ##  ~ mean(btung_per_ft2) ##  ~ median(btung_per_ft2)  ## Computing final point estimates and margin of error subset(test, rhs == \"median(btung_per_ft2)\", select = c(rent_own, est)) ## # A tibble: 2 × 2 ##   rent_own     est ##   <chr>      <dbl> ## 1 Homeowners  16.9 ## 2 Renters     19.6"},{"path":"https://ummel.github.io/fusionACS/articles/usage.html","id":"example-3","dir":"Articles","previous_headings":"Analyze microdata","what":"Example 3","title":"Using the fusionACS package","text":"Mean median natural gas consumption per square foot, calculated (separately) population subgroups defined : 1) rent/status; 2) rent/status census tract. example illustrates flexible argument can . Let’s see results rent/status (match previous median estimates): rows contain results unique combinations rent/status tract.","code":"test <- analyze(   data = my.data,   ~ mean(btung_per_ft2),   ~ median(btung_per_ft2),   by = list(rent_own, c(rent_own, tract10)) ) ## Computing estimates for numerical analyses: ##  ~ mean(btung_per_ft2) ##  ~ median(btung_per_ft2)  ## Computing final point estimates and margin of error subset(test, is.na(tract10)) ## # A tibble: 4 × 9 ##   lhs                  rhs       type  rent_own tract10 level N_eff   est    moe ##   <chr>                <chr>     <chr> <chr>    <fct>   <lgl> <dbl> <dbl>  <dbl> ## 1 mean_btung_per_ft2   mean(btu… mean  Homeown… NA      NA    60896  19.5 0.0933 ## 2 median_btung_per_ft2 median(b… medi… Homeown… NA      NA    60896  16.9 0.0875 ## 3 mean_btung_per_ft2   mean(btu… mean  Renters  NA      NA    16662  22.6 0.211  ## 4 median_btung_per_ft2 median(b… medi… Renters  NA      NA    16662  19.6 0.213"},{"path":"https://ummel.github.io/fusionACS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Ummel. Author, maintainer.           Yale University Karthik Akkiraju. Contributor.           University British Columbia Narasimha Rao. Contributor.           Yale University Daniel Aldana Cohen. Contributor.           University California, Berkeley Cora Kingdon. Contributor.           University California, Berkeley Miguel Poblete-Cazenave. Contributor.           Vrije Universiteit Amsterdam","code":""},{"path":"https://ummel.github.io/fusionACS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ummel K (2025). fusionACS: Integrated, extensive, high-resolution microdata U.S. households individuals. R package version 0.0.12, https://ummel.github.io/fusionACS.","code":"@Manual{,   title = {fusionACS: Integrated, extensive, and high-resolution microdata of U.S. households and individuals},   author = {Kevin Ummel},   year = {2025},   note = {R package version 0.0.12},   url = {https://ummel.github.io/fusionACS}, }"},{"path":[]},{"path":"https://ummel.github.io/fusionACS/index.html","id":"project-overview","dir":"","previous_headings":"","what":"Project overview","title":"fusionACS","text":"large amount data concerning American households collected surveys. Individual surveys typically focus single topic – e.g. finances, housing, health – field independent relatively small samples. result, data users constrained particular variables spatial resolution available single survey. fusionACS data science platform (Ummel et al. 2024) addresses problem statistically “fusing” variables disparate surveys simulate single, integrated, high-resolution survey. Variables unique “donor” surveys simulated American Community Survey (ACS) households individuals, thereby generating probabilistic estimates ACS respondents might answered donor survey’s questionnaire. Respondent characteristics common donor ACS (e.g. income, age, household size) – well spatial information can merged (e.g. characteristics local built environment) – used predictors variables LightGBM machine learning models (Ke et al. 2017). 2025, enhanced version fusionACS introduced integrates UrbanPop, synthetic population data product produced Oak Ridge National Laboratory (Tuccillo et al. 2023). UrbanPop provides probabilistic estimates location ACS respondent household. fusionACS + UrbanPop platform makes possible derive estimates high spatial resolution – even level individual census block groups – ACS donor survey variable. fusionACS project seeks maximize amount useful information can extracted existing U.S. household survey data order help academics policymakers answer research questions otherwise impossible.","code":""},{"path":"https://ummel.github.io/fusionACS/index.html","id":"how-to-access","dir":"","previous_headings":"","what":"How to access","title":"fusionACS","text":"fusionACS R package allows users access analyze “pseudo-sample” complete fusionACS database stored within Yale High Performance Computing (HPC) facility. complete database – consisting multiple fusion implicates integration ORNL UrbanPop synthetic population – prohibitively large public dissemination contains data released. goal fusionACS package enable users perform exploratory analysis, design, refine, test analyses using full suite variables available private database. pseudo-sample contains single record (observation) ACS respondent (households persons) period 2015-2019. record includes actual/observed values variables ACS, well single simulation variable fused donor surveys. result, pseudo-sample plausibly mimics ACS respondents might answered questions unique donor survey questionnaires. sample also includes range geographic variables – census region individual block groups – ACS household. Geographic variables smaller Public Use Microdata Areas (PUMA’s) obtained random sampling underlying UrbanPop data way block groups nationwide represented. sample data used derive “final” production-quality estimates, can used just everything else user might normally analysis development prototyping stages. analyses hyper-specific (.e. involve comparatively large number observations) estimates derived pseudo-sample often quite close true values computed full database. hope eventually possible remotely execute valid analysis – designed tested locally – using complete fusionACS database return full “production” results user.","code":""},{"path":[]},{"path":"https://ummel.github.io/fusionACS/reference/analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze fusionACS microdata — analyze","title":"Analyze fusionACS microdata — analyze","text":"Analyze fusionACS microdata pseudo-sample created assemble. Efficiently computes means, medians, sums, proportions, counts specified variables, optionally across population subgroups.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze fusionACS microdata — analyze","text":"","code":"analyze(data, ..., by = NULL, fun = NULL, cores = get_cores())"},{"path":"https://ummel.github.io/fusionACS/reference/analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze fusionACS microdata — analyze","text":"data Data frame. fusionACS microdata pseudo-sample returned assemble. ... Formulas. Used define desired analyses. See Examples. Optional variable(s) collectively define set population subgroups analysis computed. Can mix geographic (e.g. census tract) /socio-demographic microdata variables (e.g. poverty status); latter may existing variables disk custom variables created --fly via fun(). NULL, analysis done whole (national) sample. fun Function. Optional function modifying data prior analysis. fun(data) called internally requested analyses performed output. cores Integer. Number cores used multithreading collapse-package functions. default one less total available cores.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/analyze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze fusionACS microdata — analyze","text":"","code":"my.data <- assemble(  variables = c(hincp, np, btung, totsqft_en, acequipm_pub, state_name, county10, tract10),  respondent = \"household\",  state_name == \"Texas\" )  test <- analyze(   data = my.data,   mean_btung ~ mean(btung),   ~median(totsqft_en),   ~mean(acequipm_pub),   by = list(np, c(np, county10), tract10) )"},{"path":"https://ummel.github.io/fusionACS/reference/assemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble fusionACS microdata — assemble","title":"Assemble fusionACS microdata — assemble","text":"Assemble fusionACS microdata pseudo-sample, given user's requested variable(s), year(s), respondent type. also allows modification microdata via arbitrary expressions passed mutate, filter, select computed efficiently via Arrow dplyr queries.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/assemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble fusionACS microdata — assemble","text":"","code":"assemble(   variables,   respondent,   ...,   year = \"auto\",   directory = get_directory(),   cores = get_cores(),   force_up = FALSE )"},{"path":"https://ummel.github.io/fusionACS/reference/assemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble fusionACS microdata — assemble","text":"variables Vector quoted unquoted survey variables return. addition variables, output microdata also includes universal identifier variables (see Details). respondent Character. Whether return \"household\" \"person\" microdata; .e. type survey respondent. respondent = \"household\", person-level variables return response head household (.e. reference person). respondent = \"person\", household-level variables replicated person within household. ... Optional expressions passed mutate create new columns, filter subset rows, select remove variables (usually mutate). See Examples. year Either 'auto' (default) integer vector specifying year(s) ACS-PUMS microdata return. year = \"auto\" automatically sets plausible value based requested variables. directory Character. Path local fusionACS data directory. typically created automatically get_microdata. cores Integer. Number cores used multithreading arrow operations assembling microdata. default one less total available cores.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/assemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble fusionACS microdata — assemble","text":"keyed data.table containing requested variables, well following universal variables (always returned): year Year ACS-PUMS microdata observation. hid Household ID. Along year, uniquely identifies ACS-PUMS respondent household. pid Person ID (respondent = \"person\"). Along year hid, uniquely identifies ACS-PUMS respondent person. weight ACS-PUMS central observation weight.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/assemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble fusionACS microdata — assemble","text":"","code":"# Load household income (hincp), household size (np), and state from ACS, #  plus natural gas consumption (btung) and square footage (totsqft_en) from RECS, #  plus pseudo-assignment of county and tract from UrbanPop. # Nationwide household data for ACS year 2019 test <- assemble(variables = c(hincp, np, btung, totsqft_en, state_name, county10, tract10),                 respondent = \"household\")  # Same as above but for years 2017-2019 and with optional expressions used to: # 1. Restrict to households consuming natural gas in the state of Texas # 2. Create a new variable (btung_per_ft2) measuring consumption per square foot # 3. Remove btung and totsqft_en after creating btung_per_ft2 test <- assemble(variables = c(hincp, np, btung, totsqft_en, state_name, county10, tract10),                 respondent = \"household\",                 btung > 0,                 state_name == \"Texas\",                 btung_per_ft2 = btung / totsqft_en,                 -c(btung, totsqft_en))"},{"path":"https://ummel.github.io/fusionACS/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Load fusionACS microdata dictionary — dictionary","title":"Load fusionACS microdata dictionary — dictionary","text":"Returns data frame containing metadata microdata variables local fusionACS database.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load fusionACS microdata dictionary — dictionary","text":"","code":"dictionary(directory = get_directory(), verbose = TRUE)"},{"path":"https://ummel.github.io/fusionACS/reference/dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load fusionACS microdata dictionary — dictionary","text":"directory Path local fusionACS data directory.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load fusionACS microdata dictionary — dictionary","text":"data frame following columns: variable Variable name (column microdata). description Variable description definition. survey Acronym survey variable comes . vintage Vintage donor survey variable comes (NA ACS variables; see 'years' instead). respondent variable apply \"household\" \"person\" microdata observations? type data type variable (e.g. integer). n_values Number unique values variable exhibits. values Summary values found microdata. numeric variables, returns output summary. categorical variables, returns list unique values/levels. years Year(s) ACS-PUMS microdata variable available. custom Logical indicating 'custom' ACS variable created fusionACS team. See: https://github.com/ummel/fusionData/tree/master/survey-processed/ACS/custom","code":""},{"path":"https://ummel.github.io/fusionACS/reference/dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load fusionACS microdata dictionary — dictionary","text":"","code":"dict <- dictionary() View(dict)"},{"path":"https://ummel.github.io/fusionACS/reference/fusionACS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fusionACS: Integrated, extensive, and high-resolution microdata of U.S. households and individuals — fusionACS-package","title":"fusionACS: Integrated, extensive, and high-resolution microdata of U.S. households and individuals — fusionACS-package","text":"package provides access data tools facilitate otherwise impossible U.S. social survey analyses. documented pseudo-sample underlying fusionACS database made available, along functions allow efficient microdata assembly analysis. fusionACS database result statistical fusion social survey microdata simulate extensive high-resolution survey U.S. households individuals (Ummel et al. 2024; Tuccillo et al. 2023).","code":""},{"path":[]},{"path":"https://ummel.github.io/fusionACS/reference/fusionACS-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fusionACS: Integrated, extensive, and high-resolution microdata of U.S. households and individuals — fusionACS-package","text":"Maintainer: Kevin Ummel kevin.ummel@yale.edu (Yale University) contributors: Karthik Akkiraju (University British Columbia) [contributor] Narasimha Rao (Yale University) [contributor] Daniel Aldana Cohen (University California, Berkeley) [contributor] Cora Kingdon (University California, Berkeley) [contributor] Miguel Poblete-Cazenave (Vrije Universiteit Amsterdam) [contributor]","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the number of cores — get_cores","title":"Get and set the number of cores — get_cores","text":"Control number cores used fusionACS parallel processing. default (set package load) one less total number cores detected availableCores, generally accurate local machines high-performance compute (HPC) clusters.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the number of cores — get_cores","text":"","code":"get_cores()  set_cores(n)"},{"path":"https://ummel.github.io/fusionACS/reference/get_cores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the number of cores — get_cores","text":"n Number cores use.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_cores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the number of cores — get_cores","text":"Number cores use.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the default fusionACS microdata directory — get_directory","title":"Get and set the default fusionACS microdata directory — get_directory","text":"user generally need use functions, since get_microdata sets default directory automatically.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the default fusionACS microdata directory — get_directory","text":"","code":"get_directory()  set_directory(dir)"},{"path":"https://ummel.github.io/fusionACS/reference/get_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the default fusionACS microdata directory — get_directory","text":"dir Path fusionACS data directory.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the default fusionACS microdata directory — get_directory","text":"File path.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_microdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download fusionACS microdata — get_microdata","title":"Download fusionACS microdata — get_microdata","text":"default, latest (.e. recent) microdata release downloaded user data directory. default directory path updated automatically accessible via get_directory.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_microdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download fusionACS microdata — get_microdata","text":"","code":"get_microdata(version = \"latest\", overwrite = FALSE)"},{"path":"https://ummel.github.io/fusionACS/reference/get_microdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download fusionACS microdata — get_microdata","text":"version Version (release date) desired GitHub release. Defaults latest (.e. recent) microdata release. Passed pb_download internally. overwrite Logical. Can existing version disk overwritten?","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_microdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download fusionACS microdata — get_microdata","text":"Message console successful.","code":""},{"path":"https://ummel.github.io/fusionACS/reference/get_microdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download fusionACS microdata — get_microdata","text":"","code":"if (FALSE) { # \\dontrun{ get_microdata() } # }"}]
